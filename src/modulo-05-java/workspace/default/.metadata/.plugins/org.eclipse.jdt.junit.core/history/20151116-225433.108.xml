<?xml version="1.0" encoding="UTF-8"?><testrun name="br.com.cwi.crescer.test" project="crescer" tests="11" started="11" failures="1" errors="0" ignored="0">
  <testsuite name="br.com.cwi.crescer.test.DoubleLinkedListTest" time="0.002">
    <testcase name="adicionaUmNodoNoInicio" classname="br.com.cwi.crescer.test.DoubleLinkedListTest" time="0.0"/>
    <testcase name="adicionaCincoNodosNoInicio" classname="br.com.cwi.crescer.test.DoubleLinkedListTest" time="0.002">
      <failure>java.lang.AssertionError: expected:&lt;[Ichi, Ni, San, Shi, Go]&gt; but was:&lt;[Ichi, Ni, San, Shi]&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at br.com.cwi.crescer.test.DoubleLinkedListTest.adicionaCincoNodosNoInicio(DoubleLinkedListTest.java:53)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:497)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
  </testsuite>
  <testsuite name="br.com.cwi.crescer.test.LinkedListTest" time="0.002">
    <testcase name="adicionaPrimeiroNaLista" classname="br.com.cwi.crescer.test.LinkedListTest" time="0.001"/>
    <testcase name="removeNodoDeIndiceTrêsDeUmaListaDeCinco" classname="br.com.cwi.crescer.test.LinkedListTest" time="0.0"/>
    <testcase name="primeiroNodoTambémÉOÚltimo" classname="br.com.cwi.crescer.test.LinkedListTest" time="0.0"/>
    <testcase name="adicionaUltimoNodoCincoVezes" classname="br.com.cwi.crescer.test.LinkedListTest" time="0.0"/>
    <testcase name="adicionarUltimoNodoDuasVezes" classname="br.com.cwi.crescer.test.LinkedListTest" time="0.0"/>
    <testcase name="linkedListListaTemNodosComValoresIchiNiSan" classname="br.com.cwi.crescer.test.LinkedListTest" time="0.0"/>
    <testcase name="adicionaNodoAoFimDaLista" classname="br.com.cwi.crescer.test.LinkedListTest" time="0.0"/>
    <testcase name="adicionaNodoNaTerceiraPosiçãoEmListaDeCinco" classname="br.com.cwi.crescer.test.LinkedListTest" time="0.001"/>
    <testcase name="adiicionarPrimeiroNodoCincoVezes" classname="br.com.cwi.crescer.test.LinkedListTest" time="0.0"/>
  </testsuite>
</testrun>
